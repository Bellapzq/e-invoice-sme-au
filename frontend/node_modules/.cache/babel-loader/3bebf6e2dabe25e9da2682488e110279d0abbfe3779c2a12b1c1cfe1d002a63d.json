{"ast":null,"code":"var _jsxFileName = \"/Users/bella_pong/Desktop/presto/frontend/src/components/NewToolBar.jsx\",\n  _s = $RefreshSig$();\n// Imports\nimport React from 'react';\n// import axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { StyledToolBar } from '../appStyle';\n// import { URL } from '../helper';\nimport { List } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Icon from '@mui/icons-material/TextFormat';\nimport PhotoIcon from '@mui/icons-material/Photo';\n\n// import AddTextModal from './AddTextModal';\n// import AddImageModal from './AddImageModal';\nimport AddElementModal from './AddElementModal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction NewToolBar({\n  token,\n  slides,\n  setSlidesFunction,\n  updateSlidesFunction\n}) {\n  _s();\n  const [open, setOpen] = React.useState(false);\n  const [slideId, setSlideId] = React.useState('');\n  const [pageId, setPageId] = React.useState('');\n  const [elementType, setElementType] = React.useState('');\n\n  // Get path\n  const location = useLocation();\n  React.useEffect(() => {\n    const path = window.location.pathname;\n    console.log('path:', path);\n    const parts = path.split('/');\n    setSlideId(parts[1]);\n    setPageId(parts[2]);\n    console.log('parts[2]: ', parts[2]);\n    console.log('PageId: ', pageId);\n  }, [location.pathname]);\n  const addElementText = async () => {\n    // Check page id (can only add features when select a page)\n    if (!pageId) {\n      alert('No page is selected');\n      modalClose();\n    } else {\n      modalOpen();\n      setElementType('text');\n    }\n  };\n  const addElementImage = async () => {\n    // Check page id (can only add features when select a page)\n    if (!pageId) {\n      alert('No page is selected');\n      modalClose();\n    } else {\n      modalOpen();\n      setElementType('image');\n    }\n  };\n  const modalOpen = () => {\n    setOpen(true);\n  };\n  const modalClose = () => {\n    setOpen(false);\n  };\n\n  // Fetch data from the server (stored in /store) once when any of the relevant variable alters\n  // React.useEffect(() => {\n  //   const fetchData = async () => {\n  //     const data = {\n  //       store: {\n  //         cards: cards,\n  //       }\n  //     };\n  //     console.log(data);\n\n  //     try {\n  //       const response = await axios.put(`${URL}/store`, data, {\n  //         headers: {\n  //           Authorization: token,\n  //         },\n  //       });\n  //       console.log('Fetched response: ', response.data)\n  //     } catch (err) {\n  //       alert(err.response.data.error);\n  //     }\n  //   };\n  //   fetchData();\n  // }, [elements]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(StyledToolBar, {\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: addElementText,\n            sx: {\n              color: 'white'\n            },\n            \"aria-label\": \"Text\",\n            children: [/*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                display: {\n                  xs: 'none',\n                  md: 'block'\n                }\n              },\n              children: \"TEXT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: addElementImage,\n            sx: {\n              color: 'white'\n            },\n            \"aria-label\": \"IMAGE\",\n            children: [/*#__PURE__*/_jsxDEV(PhotoIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                display: {\n                  xs: 'none',\n                  md: 'block'\n                }\n              },\n              children: \"IMAGE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(AddElementModal, {\n        open: open,\n        modalCloseFunction: modalClose,\n        slideId: slideId,\n        pageId: pageId,\n        slides: slides,\n        setSlidesFunction: setSlidesFunction,\n        updateSlidesFunction: updateSlidesFunction,\n        elementType: elementType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(NewToolBar, \"GFeicXNY4sDMLv3iNbsjojI0On0=\", false, function () {\n  return [useLocation];\n});\n_c = NewToolBar;\nexport default NewToolBar;\nvar _c;\n$RefreshReg$(_c, \"NewToolBar\");","map":{"version":3,"names":["React","useLocation","StyledToolBar","List","IconButton","Typography","Icon","PhotoIcon","AddElementModal","jsxDEV","_jsxDEV","Fragment","_Fragment","NewToolBar","token","slides","setSlidesFunction","updateSlidesFunction","_s","open","setOpen","useState","slideId","setSlideId","pageId","setPageId","elementType","setElementType","location","useEffect","path","window","pathname","console","log","parts","split","addElementText","alert","modalClose","modalOpen","addElementImage","children","sx","marginTop","style","display","onClick","color","fileName","_jsxFileName","lineNumber","columnNumber","variant","xs","md","modalCloseFunction","_c","$RefreshReg$"],"sources":["/Users/bella_pong/Desktop/presto/frontend/src/components/NewToolBar.jsx"],"sourcesContent":["// Imports\nimport React from 'react';\n// import axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { StyledToolBar } from '../appStyle';\n// import { URL } from '../helper';\nimport { List } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Icon from '@mui/icons-material/TextFormat';\nimport PhotoIcon from '@mui/icons-material/Photo';\n\n// import AddTextModal from './AddTextModal';\n// import AddImageModal from './AddImageModal';\nimport AddElementModal from './AddElementModal';\n\nfunction NewToolBar ({ token, slides, setSlidesFunction, updateSlidesFunction }) {\n  const [open, setOpen] = React.useState(false);\n  const [slideId, setSlideId] = React.useState('');\n  const [pageId, setPageId] = React.useState('');\n  const [elementType, setElementType] = React.useState('');\n\n  // Get path\n  const location = useLocation();\n  React.useEffect(() => {\n    const path = window.location.pathname;\n    console.log('path:', path);\n    const parts = path.split('/');\n    setSlideId(parts[1]);\n    setPageId(parts[2]);\n    console.log('parts[2]: ', parts[2]);\n    console.log('PageId: ', pageId);\n  }, [location.pathname]);\n\n  const addElementText = async () => {\n    // Check page id (can only add features when select a page)\n    if (!pageId) {\n      alert('No page is selected');\n      modalClose();\n    } else {\n      modalOpen();\n      setElementType('text');\n    }\n  }\n  const addElementImage = async () => {\n    // Check page id (can only add features when select a page)\n    if (!pageId) {\n      alert('No page is selected');\n      modalClose();\n    } else {\n      modalOpen();\n      setElementType('image')\n    }\n  }\n  const modalOpen = () => {\n    setOpen(true);\n  };\n  const modalClose = () => {\n    setOpen(false);\n  };\n\n  // Fetch data from the server (stored in /store) once when any of the relevant variable alters\n  // React.useEffect(() => {\n  //   const fetchData = async () => {\n  //     const data = {\n  //       store: {\n  //         cards: cards,\n  //       }\n  //     };\n  //     console.log(data);\n\n  //     try {\n  //       const response = await axios.put(`${URL}/store`, data, {\n  //         headers: {\n  //           Authorization: token,\n  //         },\n  //       });\n  //       console.log('Fetched response: ', response.data)\n  //     } catch (err) {\n  //       alert(err.response.data.error);\n  //     }\n  //   };\n  //   fetchData();\n  // }, [elements]);\n\n  return (\n    <>\n    <StyledToolBar>\n    <List sx={{ marginTop: '10px' }}>\n      <li style={{ display: 'inline-block' }}>\n      <IconButton onClick={addElementText} sx={{ color: 'white' }} aria-label=\"Text\">\n        <Icon />\n        <Typography variant=\"body1\" sx={{ display: { xs: 'none', md: 'block' } }}>TEXT</Typography>\n      </IconButton>\n      </li>\n      <li style={{ display: 'inline-block' }}>\n        <IconButton onClick={addElementImage} sx={{ color: 'white' }} aria-label=\"IMAGE\">\n          <PhotoIcon />\n          <Typography variant=\"body1\" sx={{ display: { xs: 'none', md: 'block' } }}>IMAGE</Typography>\n        </IconButton>\n      </li>\n    </List>\n    <AddElementModal open={open} modalCloseFunction={modalClose} slideId={slideId} pageId={pageId} slides={slides} setSlidesFunction={setSlidesFunction} updateSlidesFunction={updateSlidesFunction} elementType={elementType} />\n    </StyledToolBar>\n    </>\n  );\n}\n\nexport default NewToolBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}