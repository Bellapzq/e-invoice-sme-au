{"ast":null,"code":"var _jsxFileName = \"/Users/bella_pong/Desktop/presto/frontend/src/pages/Slides.jsx\";\n// Imports\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n// import { StyledMain } from '../appStyle.js';\n// import { Box } from '@mui/material';\n\nimport Header from '../components/Header';\nimport CreatePage from '../components/CreatePage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Slides({\n  token,\n  setTokenFunction,\n  cards,\n  setCardsFunction\n}) {\n  // User is logged out\n  if (token === '') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Functions for Deleting Cards 删除卡片的函数\n  const deleteCard = cardId => {\n    setCardsFunction(currentCards => {\n      console.log('current cards array (after delete) 当前卡片列表:', currentCards);\n      console.log('card id of delete 删除卡片ID:', cardId);\n      const updatedCards = currentCards.filter(card => card.url !== cardId);\n      console.log('cards array after element delete 更新后的卡片列表:', updatedCards);\n      return updatedCards;\n    });\n  };\n  // function for find card in cards array thought id\n  const findCardById = id => {\n    return cards.find(card => card.url.includes(id));\n  };\n  // Functions for updating project names 更新项目名称的函数\n  const updateProjectName = (id, newName) => {\n    setCardsFunction(currentCards => currentCards.map(card => card.url.includes(id) ? {\n      ...card,\n      projectName: newName\n    } : card));\n  };\n  // Functions for updating content\n  const updateContent = (id, newContent) => {\n    setCardsFunction(currentCards => currentCards.map(card => card.url.includes(id) ? {\n      ...card,\n      projectContent: newContent\n    } : card));\n  };\n  // Functions for updating slides array which in cards array\n  const updateSlides = (id, newSlides) => {\n    setCardsFunction(currentCards => currentCards.map(card => card.url.includes(id) ? {\n      ...card,\n      slides: newSlides\n    } : card));\n  };\n  // function for updating the number of pages in card\n  const updatePageNum = (id, newPageNum) => {\n    setCardsFunction(currentCards => currentCards.map(card => card.url.includes(id) ? {\n      ...card,\n      projectPage: newPageNum\n    } : card));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        token: token,\n        setTokenFunction: setTokenFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreatePage, {\n        updatePageNum: updatePageNum,\n        updateSlides: updateSlides,\n        cards: cards,\n        findCardById: findCardById,\n        deleteCard: deleteCard,\n        updateProjectName: updateProjectName,\n        updateContent: updateContent,\n        token: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Slides;\nexport default Slides;\nvar _c;\n$RefreshReg$(_c, \"Slides\");","map":{"version":3,"names":["React","Navigate","Header","CreatePage","jsxDEV","_jsxDEV","Fragment","_Fragment","Slides","token","setTokenFunction","cards","setCardsFunction","to","fileName","_jsxFileName","lineNumber","columnNumber","deleteCard","cardId","currentCards","console","log","updatedCards","filter","card","url","findCardById","id","find","includes","updateProjectName","newName","map","projectName","updateContent","newContent","projectContent","updateSlides","newSlides","slides","updatePageNum","newPageNum","projectPage","children","style","display","flexDirection","_c","$RefreshReg$"],"sources":["/Users/bella_pong/Desktop/presto/frontend/src/pages/Slides.jsx"],"sourcesContent":["// Imports\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n// import { StyledMain } from '../appStyle.js';\n// import { Box } from '@mui/material';\n\nimport Header from '../components/Header';\nimport CreatePage from '../components/CreatePage';\n\nfunction Slides ({ token, setTokenFunction, cards, setCardsFunction }) {\n  // User is logged out\n  if (token === '') {\n    return <Navigate to=\"/login\" />\n  }\n\n  // Functions for Deleting Cards 删除卡片的函数\n  const deleteCard = cardId => {\n    setCardsFunction(currentCards => {\n      console.log('current cards array (after delete) 当前卡片列表:', currentCards);\n      console.log('card id of delete 删除卡片ID:', cardId);\n      const updatedCards = currentCards.filter(card => card.url !== cardId);\n      console.log('cards array after element delete 更新后的卡片列表:', updatedCards);\n      return updatedCards;\n    });\n  };\n  // function for find card in cards array thought id\n  const findCardById = (id) => {\n    return cards.find(card => card.url.includes(id));\n  };\n  // Functions for updating project names 更新项目名称的函数\n  const updateProjectName = (id, newName) => {\n    setCardsFunction(currentCards =>\n      currentCards.map(card =>\n        card.url.includes(id) ? { ...card, projectName: newName } : card\n      )\n    );\n  };\n  // Functions for updating content\n  const updateContent = (id, newContent) => {\n    setCardsFunction(currentCards =>\n      currentCards.map(card =>\n        card.url.includes(id) ? { ...card, projectContent: newContent } : card\n      )\n    );\n  };\n  // Functions for updating slides array which in cards array\n  const updateSlides = (id, newSlides) => {\n    setCardsFunction(currentCards =>\n      currentCards.map(card =>\n        card.url.includes(id) ? { ...card, slides: newSlides } : card\n      )\n    );\n  };\n  // function for updating the number of pages in card\n  const updatePageNum = (id, newPageNum) => {\n    setCardsFunction(currentCards =>\n      currentCards.map(card =>\n        card.url.includes(id) ? { ...card, projectPage: newPageNum } : card\n      )\n    );\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <Header token={token} setTokenFunction={setTokenFunction} />\n        <CreatePage updatePageNum={updatePageNum} updateSlides={updateSlides} cards={cards} findCardById={findCardById} deleteCard={deleteCard} updateProjectName={updateProjectName} updateContent={updateContent} token={token} />\n      </div>\n    </>\n  )\n}\n\nexport default Slides;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}