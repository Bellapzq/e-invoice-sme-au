{"ast":null,"code":"var _jsxFileName = \"/Users/bella_pong/Desktop/presto/frontend/src/components/CreateSlides.jsx\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\nimport React, { useEffect } from 'react';\nimport { Paper, IconButton } from '@mui/material';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport { useNavigate } from 'react-router-dom';\n\n// const PaperStyle = {\n//   // position: 'absolute',\n//   // marginLeft: '27vw',\n//   // marginTop: '15vh',\n//   top: 0,\n//   left: 0,\n//   right: 0,\n//   bottom: 0,\n//   width: '65vw',\n//   height: '75vh'\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateSlides({\n  cards\n}) {\n  _s();\n  const path = window.location.pathname;\n  const navigate = useNavigate();\n\n  // Split the path by '/' to get the parts 按 '/' 分割路径来获取各部分\n  const pathSegments = path.split('/');\n  // cardUrl is the second part (the first part is an empty string because the path starts with '/') / cardUrl 是第二个部分（第一个部分是空字符串，因为路径以 '/' 开始）\n  const cardUrl = pathSegments[1];\n  // slideNumber is the third part / slideNumber 是第三个部分\n  const slideNumber = pathSegments[2];\n  // mix part 1 and part 2\n  const fullSlideUrl = `/${cardUrl}/${slideNumber}`;\n\n  // Now use the parsed cardUrl and fullSlideUrl to find the current card and slide. 现在使用解析出的 cardUrl 和 fullSlideUrl来找到当前卡片和幻灯片\n  const currentCard = cards.find(card => `${card.url}` === `/${cardUrl}`);\n  const slides = currentCard ? currentCard.slides : [];\n  // 注意，fullSlideUrl 是作为 URL 的一部分，因此它应该与 slide 对象的 url 属性匹配\n  const currentSlide = slides.find(slide => slide.url === fullSlideUrl);\n  // If the current slide exists, get its index 如果当前幻灯片存在，则获取其索引\n  const currentSlideIndex = currentSlide ? slides.indexOf(currentSlide) : -1;\n\n  // Log output for debugging 日志输出用于调试\n  // console.log('Current Slide Number:', slideNumber);\n  // console.log('Current Slide url:', fullSlideUrl);\n  // console.log('Current Card URL:', cardUrl);\n  // console.log('Current Slide Number:', slideNumber);\n  // console.log('Current Card:', currentCard);\n  // console.log('Current Slide Index:', currentSlideIndex);\n  // console.log('Slides:', slides);\n  // Click on the left arrow to go to the previous page\n  const goToPreviousSlide = () => {\n    const prevSlideIndex = currentSlideIndex - 1;\n    if (prevSlideIndex >= 0) {\n      navigate(`${slides[prevSlideIndex].url}`);\n    } else {\n      console.log('Already at the first slide.');\n    }\n  };\n  // Click on the right arrow to go to the next page\n  const goToNextSlide = () => {\n    const nextSlideIndex = currentSlideIndex + 1;\n    if (nextSlideIndex < slides.length) {\n      navigate(`${slides[nextSlideIndex].url}`);\n    } else {\n      console.log('Already at the last slide.');\n    }\n  };\n  // If a previous page exists, the left arrow appears\n  const canGoToPrevious = currentSlideIndex > 0;\n  // If a back page exists, the right arrow appears\n  const canGoToNext = currentSlideIndex < slides.length - 1;\n  // Functions to handle keyboard key events 处理键盘按键事件的函数\n  const handleKeyPress = event => {\n    if (event.key === 'ArrowLeft') {\n      console.log('Going to previous slide');\n      // Left arrow key pressed 左箭头键被按下\n      goToPreviousSlide();\n    } else if (event.key === 'ArrowRight') {\n      // Right arrow key pressed 右箭头键被按下\n      console.log('Going to next slide');\n      goToNextSlide();\n    }\n  };\n  // Adding event listeners to component mounts 在组件挂载时添加事件监听器\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n\n    // Removing event listeners when a component is uninstalled 在组件卸载时移除事件监听器\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [currentSlideIndex, slides]); // Empty dependency arrays ensure that event listeners only run when mounted and unmounted 空的依赖数组确保事件监听器只在挂载和卸载时运行\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    sx: {\n      display: 'flex',\n      margin: '20px',\n      position: 'absolute',\n      right: 0,\n      bottom: 0\n    },\n    children: [canGoToPrevious && /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: goToPreviousSlide,\n      \"aria-label\": \"Last slide\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIosNewIcon, {\n        sx: {\n          fontSize: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        left: 0,\n        bottom: 0,\n        width: '50px',\n        height: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '1em',\n          color: 'gray',\n          textAlign: 'center'\n        },\n        children: currentSlideIndex + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), canGoToNext && /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: goToNextSlide,\n      \"aria-label\": \"Next slide\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(ArrowForwardIosIcon, {\n        sx: {\n          fontSize: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 7\n  }, this);\n}\n_s(CreateSlides, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateSlides;\nexport default CreateSlides;\nvar _c;\n$RefreshReg$(_c, \"CreateSlides\");","map":{"version":3,"names":["React","useEffect","Paper","IconButton","ArrowBackIosNewIcon","ArrowForwardIosIcon","useNavigate","jsxDEV","_jsxDEV","CreateSlides","cards","_s","path","window","location","pathname","navigate","pathSegments","split","cardUrl","slideNumber","fullSlideUrl","currentCard","find","card","url","slides","currentSlide","slide","currentSlideIndex","indexOf","goToPreviousSlide","prevSlideIndex","console","log","goToNextSlide","nextSlideIndex","length","canGoToPrevious","canGoToNext","handleKeyPress","event","key","addEventListener","removeEventListener","elevation","sx","display","margin","position","right","bottom","children","onClick","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","style","left","width","height","textAlign","_c","$RefreshReg$"],"sources":["/Users/bella_pong/Desktop/presto/frontend/src/components/CreateSlides.jsx"],"sourcesContent":["// import * as React from 'react';\nimport React, { useEffect } from 'react';\nimport { Paper, IconButton } from '@mui/material';\nimport ArrowBackIosNewIcon from '@mui/icons-material/ArrowBackIosNew';\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\nimport { useNavigate } from 'react-router-dom';\n\n// const PaperStyle = {\n//   // position: 'absolute',\n//   // marginLeft: '27vw',\n//   // marginTop: '15vh',\n//   top: 0,\n//   left: 0,\n//   right: 0,\n//   bottom: 0,\n//   width: '65vw',\n//   height: '75vh'\n// };\nfunction CreateSlides ({ cards }) {\n  const path = window.location.pathname;\n  const navigate = useNavigate();\n\n  // Split the path by '/' to get the parts 按 '/' 分割路径来获取各部分\n  const pathSegments = path.split('/');\n  // cardUrl is the second part (the first part is an empty string because the path starts with '/') / cardUrl 是第二个部分（第一个部分是空字符串，因为路径以 '/' 开始）\n  const cardUrl = pathSegments[1];\n  // slideNumber is the third part / slideNumber 是第三个部分\n  const slideNumber = pathSegments[2];\n  // mix part 1 and part 2\n  const fullSlideUrl = `/${cardUrl}/${slideNumber}`;\n\n  // Now use the parsed cardUrl and fullSlideUrl to find the current card and slide. 现在使用解析出的 cardUrl 和 fullSlideUrl来找到当前卡片和幻灯片\n  const currentCard = cards.find(card => `${card.url}` === `/${cardUrl}`);\n  const slides = currentCard ? currentCard.slides : [];\n  // 注意，fullSlideUrl 是作为 URL 的一部分，因此它应该与 slide 对象的 url 属性匹配\n  const currentSlide = slides.find(slide => slide.url === fullSlideUrl);\n  // If the current slide exists, get its index 如果当前幻灯片存在，则获取其索引\n  const currentSlideIndex = currentSlide ? slides.indexOf(currentSlide) : -1;\n\n  // Log output for debugging 日志输出用于调试\n  // console.log('Current Slide Number:', slideNumber);\n  // console.log('Current Slide url:', fullSlideUrl);\n  // console.log('Current Card URL:', cardUrl);\n  // console.log('Current Slide Number:', slideNumber);\n  // console.log('Current Card:', currentCard);\n  // console.log('Current Slide Index:', currentSlideIndex);\n  // console.log('Slides:', slides);\n  // Click on the left arrow to go to the previous page\n  const goToPreviousSlide = () => {\n    const prevSlideIndex = currentSlideIndex - 1;\n    if (prevSlideIndex >= 0) {\n      navigate(`${slides[prevSlideIndex].url}`);\n    } else {\n      console.log('Already at the first slide.');\n    }\n  };\n  // Click on the right arrow to go to the next page\n  const goToNextSlide = () => {\n    const nextSlideIndex = currentSlideIndex + 1;\n    if (nextSlideIndex < slides.length) {\n      navigate(`${slides[nextSlideIndex].url}`);\n    } else {\n      console.log('Already at the last slide.');\n    }\n  };\n  // If a previous page exists, the left arrow appears\n  const canGoToPrevious = currentSlideIndex > 0;\n  // If a back page exists, the right arrow appears\n  const canGoToNext = currentSlideIndex < slides.length - 1;\n  // Functions to handle keyboard key events 处理键盘按键事件的函数\n  const handleKeyPress = (event) => {\n    if (event.key === 'ArrowLeft') {\n      console.log('Going to previous slide');\n      // Left arrow key pressed 左箭头键被按下\n      goToPreviousSlide();\n    } else if (event.key === 'ArrowRight') {\n      // Right arrow key pressed 右箭头键被按下\n      console.log('Going to next slide');\n      goToNextSlide();\n    }\n  };\n  // Adding event listeners to component mounts 在组件挂载时添加事件监听器\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n\n    // Removing event listeners when a component is uninstalled 在组件卸载时移除事件监听器\n    return () => {\n      window.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [currentSlideIndex, slides]); // Empty dependency arrays ensure that event listeners only run when mounted and unmounted 空的依赖数组确保事件监听器只在挂载和卸载时运行\n  return (\n      <Paper elevation={3} sx={{ display: 'flex', margin: '20px', position: 'absolute', right: 0, bottom: 0 }} >\n        {canGoToPrevious && (\n          <IconButton onClick={goToPreviousSlide} aria-label=\"Last slide\" color=\"primary\">\n            <ArrowBackIosNewIcon sx={{ fontSize: 20 }} />\n          </IconButton>\n        )}\n        <div style={{ left: 0, bottom: 0, width: '50px', height: '50px' }}>\n          <p style={{ fontSize: '1em', color: 'gray', textAlign: 'center' }}>{currentSlideIndex + 1}</p>\n        </div>\n        {canGoToNext && (\n          <IconButton onClick={goToNextSlide} aria-label=\"Next slide\" color=\"primary\">\n            <ArrowForwardIosIcon sx={{ fontSize: 20 }} />\n          </IconButton>\n        )}\n      </Paper>\n  );\n}\nexport default CreateSlides;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}