{"ast":null,"code":"var _jsxFileName = \"/Users/bella_pong/Desktop/presto/frontend/src/pages/Dashboard.jsx\",\n  _s = $RefreshSig$();\n// Imports\nimport React from 'react';\nimport axios from 'axios';\nimport { Navigate } from 'react-router-dom';\nimport { StyledMain } from '../appStyle.js';\nimport { URL } from '../helper';\nimport Header from '../components/Header';\nimport CreateModal from '../components/CreateModal';\nimport DashboardGrid from '../components/DashboardGrid';\n\n// Function for dashboard\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard({\n  token,\n  setTokenFunction,\n  cards,\n  setCardsFunction\n}) {\n  _s();\n  console.log(token);\n  // User is logged out\n  if (token === '') {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Fetch data from the server (stored in /store) once\n  React.useEffect(() => {\n    axios.get(`${URL}/store`, {\n      headers: {\n        Authorization: token\n      }\n    }).then(response => {\n      console.log('Fetched data: ', response.data.store);\n    });\n  }, []);\n\n  // Post data to the server (stored in /store) once when cards change\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const data = {\n        store: {\n          cards: cards\n        }\n      };\n      console.log(cards);\n      try {\n        const response = await axios.put(`${URL}/store`, data, {\n          headers: {\n            Authorization: token\n          }\n        });\n        console.log('Fetched response: ', response.data);\n      } catch (err) {\n        alert(err.response.data.error);\n      }\n    };\n    console.log('Posting data...');\n    fetchData();\n  }, [cards]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      token: token,\n      setTokenFunction: setTokenFunction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledMain, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CreateModal, {\n        cards: cards,\n        setCards: setCardsFunction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DashboardGrid, {\n        cards: cards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Dashboard, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","axios","Navigate","StyledMain","URL","Header","CreateModal","DashboardGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","token","setTokenFunction","cards","setCardsFunction","_s","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","useEffect","get","headers","Authorization","then","response","data","store","fetchData","put","err","alert","error","children","setCards","_c","$RefreshReg$"],"sources":["/Users/bella_pong/Desktop/presto/frontend/src/pages/Dashboard.jsx"],"sourcesContent":["// Imports\nimport React from 'react';\nimport axios from 'axios';\nimport { Navigate } from 'react-router-dom';\nimport { StyledMain } from '../appStyle.js';\nimport { URL } from '../helper';\n\nimport Header from '../components/Header';\nimport CreateModal from '../components/CreateModal';\nimport DashboardGrid from '../components/DashboardGrid';\n\n// Function for dashboard\nfunction Dashboard ({ token, setTokenFunction, cards, setCardsFunction }) {\n  console.log(token);\n  // User is logged out\n  if (token === '') {\n    return <Navigate to=\"/login\" />\n  }\n\n  // Fetch data from the server (stored in /store) once\n  React.useEffect(() => {\n    axios.get(`${URL}/store`, {\n      headers: {\n        Authorization: token,\n      }\n    }).then((response) => {\n      console.log('Fetched data: ', response.data.store)\n    });\n  }, []);\n\n  // Post data to the server (stored in /store) once when cards change\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const data = {\n        store: {\n          cards: cards,\n        }\n      };\n      console.log(cards);\n\n      try {\n        const response = await axios.put(`${URL}/store`, data, {\n          headers: {\n            Authorization: token,\n          },\n        });\n        console.log('Fetched response: ', response.data)\n      } catch (err) {\n        alert(err.response.data.error);\n      }\n    };\n    console.log('Posting data...')\n    fetchData();\n  }, [cards]);\n\n  return (\n    <>\n      <Header token={token} setTokenFunction={setTokenFunction} />\n      <StyledMain>\n        <h2>Dashboard</h2>\n        <CreateModal cards={cards} setCards={setCardsFunction} />\n        <br />\n        <DashboardGrid cards={cards} />\n      </StyledMain>\n    </>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}